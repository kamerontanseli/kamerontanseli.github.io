{"ast":null,"code":"var _jsxFileName = \"/Users/kameron/Desktop/kamerontanseli.github.io/src/pages/blog/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport matter from \"gray-matter\";\nimport { serialize } from \"next-mdx-remote/serialize\";\nimport { MDXRemote } from \"next-mdx-remote\";\nimport SEO from \"../../components/new/Seo\";\n\nconst Article = ({\n  post\n}) => {\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: `${post.data.title}`,\n    description: post.data.byline,\n    image: post.data.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"\\u2190 Back to all articles\")), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, post.data.title), __jsx(\"div\", {\n    className: \"article-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(MDXRemote, _extends({}, post.content, {\n    components: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Article;\nexport async function getStaticProps({\n  params\n}) {\n  const file = await import(`../../posts/${params.slug}.md`);\n  const {\n    data,\n    content\n  } = matter(file.default);\n  const source = await serialize(content);\n  return {\n    props: {\n      post: {\n        data,\n        content: source\n      },\n      slug: params.slug\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const glob = require(\"glob\");\n\n  const blogs = glob.sync(\"src/posts/**/*.md\");\n  const blogSlugs = blogs.map(file => file.split(\"/\")[2].replace(/ /g, \"-\").slice(0, -3).trim());\n  return {\n    paths: blogSlugs.map(slug => ({\n      params: {\n        slug\n      }\n    })),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/kameron/Desktop/kamerontanseli.github.io/src/pages/blog/[slug].js"],"names":["matter","serialize","MDXRemote","SEO","Article","post","data","title","byline","image","content","getStaticProps","params","file","slug","default","source","props","getStaticPaths","glob","require","blogs","sync","blogSlugs","map","split","replace","slice","trim","paths","fallback"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,SACE,4BACE,MAAC,GAAD;AACE,IAAA,KAAK,EAAG,GAAEA,IAAI,CAACC,IAAL,CAAUC,KAAM,EAD5B;AAEE,IAAA,WAAW,EAAEF,IAAI,CAACC,IAAL,CAAUE,MAFzB;AAGE,IAAA,KAAK,EAAEH,IAAI,CAACC,IAAL,CAAUG,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAI,CAACC,IAAL,CAAUC,KAAf,CATF,EAUE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,IAAI,CAACK,OAApB;AAA6B,IAAA,UAAU,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAVF,CADF;AAgBD,CAjBD;;AAmBA,eAAeN,OAAf;AAEA,OAAO,eAAeO,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C,QAAMC,IAAI,GAAG,MAAM,OAAQ,eAAcD,MAAM,CAACE,IAAK,KAAlC,CAAnB;AACA,QAAM;AAAER,IAAAA,IAAF;AAAQI,IAAAA;AAAR,MAAoBV,MAAM,CAACa,IAAI,CAACE,OAAN,CAAhC;AACA,QAAMC,MAAM,GAAG,MAAMf,SAAS,CAACS,OAAD,CAA9B;AAEA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAF;AAAQI,QAAAA,OAAO,EAAEM;AAAjB,OADD;AAELF,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFR;AADF,GAAP;AAMD;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,QAAMC,KAAK,GAAGF,IAAI,CAACG,IAAL,CAAU,mBAAV,CAAd;AAEA,QAAMC,SAAS,GAAGF,KAAK,CAACG,GAAN,CAAWX,IAAD,IAC1BA,IAAI,CACDY,KADH,CACS,GADT,EACc,CADd,EAEGC,OAFH,CAEW,IAFX,EAEiB,GAFjB,EAGGC,KAHH,CAGS,CAHT,EAGY,CAAC,CAHb,EAIGC,IAJH,EADgB,CAAlB;AAQA,SAAO;AACLC,IAAAA,KAAK,EAAEN,SAAS,CAACC,GAAV,CAAeV,IAAD,KAAW;AAAEF,MAAAA,MAAM,EAAE;AAAEE,QAAAA;AAAF;AAAV,KAAX,CAAd,CADF;AAELgB,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID","sourcesContent":["import matter from \"gray-matter\";\nimport { serialize } from \"next-mdx-remote/serialize\";\nimport { MDXRemote } from \"next-mdx-remote\";\nimport SEO from \"../../components/new/Seo\";\n\nconst Article = ({ post }) => {\n  return (\n    <>\n      <SEO\n        title={`${post.data.title}`}\n        description={post.data.byline}\n        image={post.data.image}\n      />\n      <p>\n        <a href=\"/\">&larr; Back to all articles</a>\n      </p>\n      <h1>{post.data.title}</h1>\n      <div className=\"article-content\">\n        <MDXRemote {...post.content} components={{}} />\n      </div>\n    </>\n  );\n};\n\nexport default Article;\n\nexport async function getStaticProps({ params }) {\n  const file = await import(`../../posts/${params.slug}.md`);\n  const { data, content } = matter(file.default);\n  const source = await serialize(content);\n\n  return {\n    props: {\n      post: { data, content: source },\n      slug: params.slug,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const glob = require(\"glob\");\n  const blogs = glob.sync(\"src/posts/**/*.md\");\n\n  const blogSlugs = blogs.map((file) =>\n    file\n      .split(\"/\")[2]\n      .replace(/ /g, \"-\")\n      .slice(0, -3)\n      .trim()\n  );\n\n  return {\n    paths: blogSlugs.map((slug) => ({ params: { slug } })),\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}